<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADn5v2ggYBeT0w6MDNXR0R7YWQHBQUAAACNhYZmYGBm
        YGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBmYGBm
        YGBmYGBmYGBmYGBmYGBmYGBmYGCNhYYAAAAIBgZ7YWRXR0Q6MDNeT0yggYDn5v0AAAAAAACggYDLpKaG
        bWxlUVJeTE4AAAAAAAB/eHhXR0hGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBG
        QEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBGQEBXR0h/eHgAAAAAAABeS01k
        UVKGbWzLpKaggYAAAAAAAABeT0yEa26NcXR2XWEAAAAAAAB/eHhXR0gwJikmHiEnHyEnHyEnHyEnHyEn
        HyEnHyEnHyEmHiApIiMtJCYrJCYvJygyLC4zLS8vKSsqIiQpISMnHyImHyEmHyAlHiAmHyEpIiMoICIl
        Hh8lHR8lHSAxJypXR0h/eHgAAAAAAAB2XGCNcHOFa25eT0wAAAAAAAA6MDNiUVV2XWIAAAAAAABwaGlX
        R0gfGBoHBgcCAAAHBAUHAwUHAwUHAwUHAwUHAwUHAwUGAwQIBQYLBggGBQUJBgYLCAkLCQoJBwcHBAQF
        AwQEAQMGAwQGAwQGAwQHAwUIBQYIBAUGAwQGAwQDAAEKBwkeFxlXR0h/eHgAAAAAAAB1XGFiT1Q6MDMA
        AAAAAABXR0RdSk8AAAARDw4FCgcOEA4ODw0BBwQFCwgGDAoGDAkFDAkFDAkFDAkGDAkGDAkGDAgGDAkF
        DAgFCwgGDAgFCwgFCwgFCwgFCwgGDAkGDAkGDAkGDAgGDAgFCwgFCwgFCwgFCwkFCwgFCwgFCQcDBgQA
        AQAcFhhXR0h/eHgHBQcAAABdS09XR0QAAAAAAAB7YWQAAAAAAACDy6yDy6x2uJp0t5h3t5l4upt3uZt1
        tpl0tpl0t5pzt5pyt5pyt5pztphztZl1tZd1tZd2tZZ2tZZ2tZZ2tZZ2tZZ2tZZ2tZZ2tZd2t5h3t5l4
        uJp4upt4uZt5upt4upt4uZp2r5Jwrppzzruk+/oJAgNXR0h/eHgAAAAAAAB7YWQAAAAAAAAAAAANCAsA
        AABooJtaiHdafW1aem1VdWlScWRRcmVRcWRRcWVQcWZPcGVOcGZOcGZQcGVQb2RSb2JSbmJTbmFTb2FT
        b2FTb2FTb2FTb2FTb2FTb2FTcWRUcWRVc2ZWdmhXdmdVdGZUcmZVbWFalIZpzsCF//+k+/oAAAAbFhhX
        R0h/eHgOCw0AAAAAAAAAAAACAwRuZmYBAABooJtTgn5Ta2s6TEwuQTwuQD0vQjwyRD0xQDgwPzgvQDov
        QTowQDkxPzcxPTUzPDM0OzI0OzE1OjE0OjA0OjA0OjA0OTA0OTA0OTAzOS8zOC8yOC8yNy4yOC8wNi4y
        NC1SUkxesqdA9uxx//+k+/oAAAAAAAAjHR9XR0h/eHgCAwMAAAAAAACQiIlDLzgAAABooJtTgn5IZ3Qu
        SFcdMT0QKTYKFx0HCQcKEA4NEg8OFhEOFhIOFhEOFA8NEA4MCwwMCgoMCAkNCgoQDAwSDAwSDAwTDA0U
        DQ4UDQ4VDQ4TDg4UDg4UDg4TDA0LCgoZExFWdXJN0c4g8uxN//+k+/oAAAAhGB0rJCo4LjNCLjeNhYYA
        AAAAAABcV19DMDgAAABjk4FTgn5HanM5V2QpRFceN0kMISwHExcuWGcuXGwtW2ouXGwtWmwuVmQzWGI1
        YWo4aXM7cXg9c3lEe4BFf4RFgIVHhYpKiY5KiI1JiIxJiIxJiIxJiIxIhYpFhYlNhIFSjI471dQe7elD
        //+k+/oAAAA0JS03LzcrJipDMDhdWGEAAAAAAABXUltDMjoAAQEOFxdjk4FTf31FaGw3VGEpRFkeN0kV
        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
        W3hzZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1zZY1z
        ZY1zZY1zZY1zZY1zZY1fWniZlsPn5/8AAAAFAwhiWHhFPGVFPGUmIzhTVGLo5/8AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>